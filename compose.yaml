services:

  server:
    container_name: maxitwitserver
    build:
      dockerfile: Dockerfile.app
      context: .
      target: ${TARGET}
    volumes:
      - ./src:/usr/src/app/src
    ports:
      - 3000:3000
    networks:
      - maxitwit-network
    environment:
      - HUSKY=0
    env_file: .env
    depends_on:
      - postgres
    restart: always
    

  api:
    container_name: maxitwitapi
    build:
      dockerfile: Dockerfile.api
      context: .
      target: ${TARGET}
    volumes:
      - ./src:/usr/src/app/src
    ports:
      - 3001:3001
    networks:
      - maxitwit-network
    environment:
      - HUSKY=0
    env_file: .env
    depends_on:
      - postgres
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - maxitwit-network

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - maxitwit-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: testdb
    ports:
      - 5432:5432
    networks:
      - maxitwit-network

  # Elasticsearch
  eslogs:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.8.0"
    container_name: eslogs
    mem_limit: 4g
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elastic/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node

  # Kibana. Gotta have a pretty UI, amiright?
  kibana_demo:
    image: "docker.elastic.co/kibana/kibana:7.8.0"
    container_name: kibana_demo
    volumes:
    - ./elastic/kibana.yaml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601

  # All hail the mighty, mighty LOOOOOOOGSTAAAAAAAAASH:
  logstash_demo:
    image: logstash:7.8.0
    container_name: logstash_demo
    volumes:
    - ./elastic/logging.conf:/usr/share/logstash/pipeline/logging.conf
    - ./elastic/logstash.yaml:/usr/share/logstash/config/logstash.yml
    ports:
    - 1514:1514/udp
    - 1515:1515
    - 1515:1515/udp

networks:
  maxitwit-network:
    name: maxitwit-network

volumes:
  grafana_data:
  elasticsearch_data:
