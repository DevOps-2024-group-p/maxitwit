services:
  server:
    container_name: maxitwitserver
    build:
      dockerfile: Dockerfile.app
      context: .
      target: ${TARGET}
    volumes:
      - ./src:/usr/src/app/src
    ports:
      - 3000:3000
    networks:
      - maxitwit-network
    environment:
      - HUSKY=0
    env_file: .env
    depends_on:
      - postgres
    restart: always
    

  api:
    container_name: maxitwitapi
    build:
      dockerfile: Dockerfile.api
      context: .
      target: ${TARGET}
    volumes:
      - ./src:/usr/src/app/src
    ports:
      - 3001:3001
    networks:
      - maxitwit-network
    environment:
      - HUSKY=0
    env_file: .env
    depends_on:
      - postgres
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - maxitwit-network

  grafana:
    image: grafana/grafana:10.2.4
    ports:
      - '3002:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - maxitwit-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: localdb
      PGPORT: 9998
    ports:
      - 9998:9998
    networks:
      - maxitwit-network

networks:
  maxitwit-network:
    name: maxitwit-network

volumes:
  grafana_data:
